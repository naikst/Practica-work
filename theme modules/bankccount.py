# Класс BankAccount управляет основными операциями банковского счета, такими как внесение,
# снятие и проверка наличия средств. Это позволяет имитировать базовые функции банковского счета.
class BankAccount:
    # Метод __init__ инициализирует новый объект BankAccount с заданным балансом.
    # Аргумент bal задает начальный остаток на счете.
    # Он сохранен в частном атрибуте _balance.
    def __init__(self, bal):
        self._balance = bal

    # Метод __str__ возвращает строковое представление объекта BankAccount
    # с указанием текущего баланса
    # Это используется при выводе объекта, например, на печать или в системный журнал.
    def __str__(self):
        return f'Текущий остаток: ₽{self._balance:,.2f}'

    # Метод deposit вносит определенную сумму на счет.
    # Он принимает аргумент amount, который добавляется к текущему остатку.
    def deposit(self, amount):
        self._balance += amount

    # Метод withdraw снимает заданную сумму со счета,
    # если на счету достаточно средств. В противном случае выводится сообщение об ошибке.
    # amount - это сумма, которую необходимо снять.
    def withdraw(self, amount):
        if self._balance >= amount:
            self._balance -= amount

        else:
            print('Ошибка: недостаточно средств')

    # Метод get_balance возвращает текущий остаток средств на счете.
    # Он полезен для проверки баланса без выполнения операций на снятие или внесение.
    def get_balance(self):
        return self._balance





