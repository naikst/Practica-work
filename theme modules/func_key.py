# Ключевые аргументы.

# В этом случае для передачи аргументов функции используется имя(ключ) вместо позиций(как было досих пор).
# Есть два преимущества такого подхода: во-первых, использование функций становится легче, поскольку нет
# необходимости отслеживать порядок аргументов; во-вторых, можно задавать значения только некоторым избранным
# аргументам, при условий, что остальные параметры имеют значения аргумента по умолчанию.


def func(a, b=5, c=10):  # Функция с именем func имеет один параметр без значения по умолчанию, за которым следуют
    # два параметра со значениями по умолчанию.
    print('a равно', a, ', b равно', b, ', a c равно', c)


func(3, 7)   # При первом вызове этой функций, параметр a получает значение 3, параметр b получает значение 7,
# а c получает свое значение по умолчанию, равное 10.
func(25, c=24)  # При втором вызове этой функций, переменная a получает значение 25 в силу позиций аргумента. После
# этого параметр c получает значение 24 по имени т.е как ключевой параметр. Переменная b получает значение по
# умолчанию, равное 5.
func(c=50, a=100)  # При третьем обращений func(c=50, a=100) мы используем ключевые аргументы для всех указанных
# значений. Обратите внимание на то, что мы указываем значение для параметра c перед значением для a, даже не смотря
# на то, что в определеии функицй параметр a указан раньше c.
