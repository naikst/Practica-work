x = 50


def func():
    global x  # указываем имя глобально с помошью global, а в func() оставляем так. Потому что локально если бы,
    # то global убираем. Зарезервированное слово global используется для того, чтобы обьявить, что х - это глобальная
    # переменная, а значит, когда мы присваиваем значение имени х внутри функици, это изменнение отразится на
    # значении переменной х в основном блоке программы. Используя одно зарезервированное слово global,
    # можно обьявить сразу несколько переменных: global x, y, z.

    print('x равен', x)
    # Первый вывод значения, присвоенного имени х, в первой строке функций использует значение параметра,
    # обьявленного в основном блоке, выше определения функций.
    x = 2  # назначаем х значение 2. Имя х локально для нашей функций. Поэтому когда мы заменяем значение х в функций,
    # х, обьявленный в основном в блоке, остаётся незатронутым.
    print('Замена локального x на', x)


func()
print('x по прежнему', x)  # Последним вызовом функций print мы выводим значение х, указанное в основном блоке,
# потверждая такми образом, что оно не изменилось при локальном присваивании значения в ранее вызванной функицй.
