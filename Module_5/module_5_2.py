class House:  # Определение класса House (Дом)
    def __init__(self, name, number_of_floors):
        # Это конструктор класса. Он вызывается при создании нового объекта House
        # name - название дома, number_of_floors - количество этажей
        self.name = name  # Сохраняем название дома как атрибут объекта
        self.number_of_floors = number_of_floors  # Сохраняем количество этажей как атрибут объекта

    def go_to(self, new_floor):
        # Метод для "перемещения" лифта на новый этаж
        # new_floor - номер этажа, на который нужно "переместиться"
        if 1 <= new_floor <= self.number_of_floors:
            # Проверяем, что новый этаж находится в допустимом диапазоне
            for floor in range(1, new_floor + 1):
                # Цикл от 1 до нового этажа (включительно)
                print(floor)  # Выводим номер каждого этажа
        else:
            # Если этаж вне допустимого диапазона
            print("Такого этажа не существует")

    def __len__(self):
        # Специальный метод, который вызывается при преобразовании объекта в число
        # Например, при использовании функции len(house_object)
        return self.number_of_floors  # Возвращает количество этажей дома
        # В данном случае, число этажей дома будет возвращено из атрибута number_of_floors
        # Этот метод может использоваться в циклах и других условиях, когда требуется получить число свойств объекта

    def __str__(self):
        # Специальный метод, который вызывается при преобразовании объекта в строку
        # Например, при использовании функции print(house_object)
        return f"Дом '{self.name}' с {self.number_of_floors} этажами"
        # Возвращает строку с информацией о доме


# Создание объектов класса House
h1 = House('ЖК Эльбрус', 10)
h2 = House('ЖК Акация', 20)

# __str__
print(h1)
print(h2)

# __len__
print(len(h1))
print(len(h2))
